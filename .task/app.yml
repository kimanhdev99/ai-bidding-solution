version: "3.40.1"

tasks:
  app-build:
    desc: Build application components.
    silent: true
    deps:
      - task: deps-setup
    aliases:
      - ab
    cmds:
      - task: app-build-api
      - task: app-build-ui

  app-build-api:
    desc: Build API service.
    silent: true
    deps:
      - task: deps-setup
    aliases:
      - aba
    dir: app/api
    cmds:
      - echo -e "\033[0;32mBuilding API...\033[0m"
      - python3 -m venv .venv
      - .venv/bin/pip3 install -r requirements.txt

  app-build-ui:
    desc: Build UI service.
    silent: true
    deps:
      - task: deps-setup
    aliases:
      - abu
    dir: app/ui
    cmds:
      - echo -e "\033[0;32mBuilding UI...\033[0m"
      - npm install --no-fund --no-audit
      - npm run build

  app-clean:
    desc: Remove build artifacts.
    silent: true
    deps:
      - task: deps-setup
    aliases:
      - ac
    cmds:
      - task: app-clean-api
      - task: app-clean-ui

  app-clean-api:
    desc: Remove API build artifacts.
    silent: true
    deps:
      - task: deps-setup
    aliases:
      - aca
    dir: app/api
    cmds:
      - echo -e "\033[0;32mRemoving API artifacts...\033[0m"
      - rm -rf .venv
      - rm -rf www

  app-clean-ui:
    desc: Remove UI build artifacts.
    silent: true
    deps:
      - task: deps-setup
    aliases:
      - acu
    dir: app/ui
    cmds:
      - echo -e "\033[0;32mRemoving UI artifacts...\033[0m"
      - rm -rf node_modules

  app-deploy:
    desc: Deploy application to App Service.
    silent: true
    deps:
      - task: deps-setup
    aliases:
      - ad
    dir: app
    cmds:
      - |
        echo -e "\033[0;32mUploading application...\033[0m"
        TEMP_DIR=$(mktemp -d)
        trap "rm -rf $TEMP_DIR" EXIT

        cp -a api "$TEMP_DIR/"
        rm -f "$TEMP_DIR/api/common"
        cp -a ../common "$TEMP_DIR/api/common"
        pushd $TEMP_DIR/api
        zip -q -r --symlinks "$TEMP_DIR/app.zip" * -x "*/.venv/*" -x "*/__pycache__/*"
        popd

        pushd ../infra
        RESOURCE_GROUP=$(terraform output -raw resource_group)
        APP_NAME=$(terraform output -raw webapp_name)
        popd

        ZIP_PATH="$TEMP_DIR/app.zip"
        az webapp deploy \
            -g $RESOURCE_GROUP \
            -n $APP_NAME \
            --src-path "$ZIP_PATH" \
            --type zip

  api-run:
    desc: Launch local API instance.
    silent: true
    dir: app/api
    deps:
      - task: deps-setup
    aliases:
      - ar
    cmds:
      - echo -e "\033[0;32mLaunching API...\033[0m"
      - .venv/bin/python3 -m uvicorn main:app --reload
